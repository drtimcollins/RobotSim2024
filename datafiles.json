[
	{"ID":"ID2023-1","width":110,"length":100,"WheelRadius":21,"NumberOfSensors":3,"SensorSpacing":12,"BodyColour":"bd0000","WheelColour":"000000","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 4000);\r\nSet_PWM(1, 6000);\r\n}\r\nif(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 0);\r\nSet_PWM(1, 6000);\r\n}\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) {\r\nSet_PWM(0, 6000);\r\nSet_PWM(1, 4000);\r\n}\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 6000);\r\nSet_PWM(1, 6000);\r\n}\r\nif(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) {\r\nSet_PWM(0, 6000);\r\nSet_PWM(1, 0);\r\n}\r\n}\r\n"},
	{"ID":"ID2023-2","width":95,"length":125,"WheelRadius":32.5,"NumberOfSensors":3,"SensorSpacing":15,"BodyColour":"160c64","WheelColour":"090548","LEDColour":"red","Code":"void RobotControl()\n{\nif(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\nSet_PWM(0, 1000);//left\nSet_PWM(1, 3000);\n}\nif(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold) {\nSet_PWM(0, 0);//sharp left\nSet_PWM(1, 2000);\n}\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) {\nSet_PWM(0, 3000);//right\nSet_PWM(1, 1000);\n}\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\nSet_PWM(0, 6000);//straight\nSet_PWM(1, 6000);\n}\nif(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) {\nSet_PWM(0, 2000);//sharp right\nSet_PWM(1, 0);\n}\n}\n\n\t\t\t"},
	{"ID":"ID2023-3","width":83,"length":121,"WheelRadius":30,"NumberOfSensors":2,"SensorSpacing":16,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\n// Basic speed\r\nint basic_speed=6000;\r\n// Top Speed Max is 8000\r\nint fastest_speed=8000;\r\n\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{\r\n// This is for turning right (White/Black)\r\n    Set_PWM(0, basic_speed);\r\n    // Motor 0 fast\r\n    Set_PWM(1, 0);\r\n    // Motor 1 stop\r\n    }\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{\r\n    Set_PWM(0, 0);\r\n// Motor 0 stop\r\n    Set_PWM(1, basic_speed);\r\n\r\n// This is for turning left (Black/White)\r\n// Motor 1 fast\r\n\r\n// WHITE, BLACK // BLACK, WHITE\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{\r\n    // This is Straight\r\n    // BLACK, BLACK\r\n    Set_PWM(0, fastest_speed);\r\n    // Motor 0 Fast\r\n    Set_PWM(1, fastest_speed);\r\n    // Motor 1 Fast\r\n}\r\n}\r\n"},	
	{"ID":"ID2023-4","width":85,"length":145,"WheelRadius":42.5,"NumberOfSensors":3,"SensorSpacing":13,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\n{\n    if(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\n        Set_PWM(0, 2000);\n        Set_PWM(1, 6500);\n    }\n    if(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold) {\n        Set_PWM(0, 0);\n        Set_PWM(1, 6500);\n    }\n    if(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) {\n        Set_PWM(0, 6500);\n        Set_PWM(1, 2000);\n    }\n    if(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\n        Set_PWM(0, 8000);\n        Set_PWM(1, 8000);\n    }\n    if(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) {\n        Set_PWM(0, 6500);\n        Set_PWM(1, 0);\n    }\n}\t\t"},
	{"ID":"ID2023-5","width":131,"length":168,"WheelRadius":40.5,"NumberOfSensors":3,"SensorSpacing":15,"BodyColour":"f70202","WheelColour":"f4f1f1","LEDColour":"green","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{ // WHITE, BLACK\r\nSet_PWM(0, 300000); // Motor 0 fast\r\nSet_PWM(1, 0); // Motor 1 stop\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{ // BLACK, WHITE\r\nSet_PWM(0, 0); // Motor 0 stop\r\nSet_PWM(1, 300000); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 150000); // Motor 0 medium\r\nSet_PWM(1, 150000); // Motor 1 medium\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 150000); // Motor 0 medium\r\nSet_PWM(1, 150000); // Motor 1 medium\r\n}\r\n}"},
	{"ID":"ID2023-6","width":90,"length":160,"WheelRadius":30,"NumberOfSensors":3,"SensorSpacing":17,"BodyColour":"909090","WheelColour":"444444","LEDColour":"red","Code":"\nvoid RobotControl(){\n    int BotPosition;\n    float Kp = 150;\n    float Ki = 1.5;\n    float Kd = 100;\n    int P;\n    int I;\n    int D;\n    int lastError = 0;\n    int maxspeeda = 8000;\n    int maxspeedb = 8000;\n    int basespeed = 8000;\n    \n    if (an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold){\n        BotPosition = 1000;\n    }   \n    if (an[0] > black_threshold and an[1] > black_threshold and an[2] <= black_threshold){\n        BotPosition = 750;\n    }\n    if (an[0] <= black_threshold and an[1] > black_threshold and an[2] <= black_threshold){\n        BotPosition = 500;\n    }\n    if (an[0] <= black_threshold and an[1] > black_threshold and an[2] > black_threshold){\n        BotPosition = 250;\n    }\n    if (an[0] <= black_threshold and an[1] <= black_threshold and an[2] > black_threshold){\n        BotPosition = 0;\n    }\n    if (an[0] <= black_threshold and an[1] <= black_threshold and an[2] <= black_threshold){\n        BotPosition = -10;\n    }\n    \n    \n    if (BotPosition != -10){\n    int error = 500 - BotPosition;\n    P = error;\n    I = I + error;\n    D = error - lastError;\n    lastError = error;\n    \n    int motorspeed = P*Kp + I*Ki + D*Kd;\n    int motorspeeda = basespeed + motorspeed;\n    int motorspeedb = basespeed - motorspeed;\n    \n    if (motorspeeda > maxspeeda) {\n    motorspeeda = maxspeeda;\n    }\n    if (motorspeedb > maxspeedb) {\n    motorspeedb = maxspeedb;\n    }\n    if (motorspeeda < 0) {\n    motorspeeda = 0;\n    }\n    if (motorspeedb < 0) {\n    motorspeedb = 0;\n    } \n    \n    Set_PWM(0,motorspeeda);\n    Set_PWM(1,motorspeedb);\n    }\n    \n}"},
	{"ID":"ID2023-7","width":93,"length":160,"WheelRadius":30,"NumberOfSensors":3,"SensorSpacing":17,"BodyColour":"000000","WheelColour":"000000","LEDColour":"red","Code":"int a1[3];\r\nvoid RobotControl()\r\n\r\n{\r\n\r\nif(an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\r\n\r\nSet_PWM(0, 4000);\r\nSet_PWM(1, 8000);\r\n}\r\nif(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 0);\r\nSet_PWM(1, 8000);\r\n}\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) {\r\nSet_PWM(0, 8000);\r\nSet_PWM(1, 4000);\r\n}\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) {\r\nSet_PWM(0, 8000);\r\nSet_PWM(1, 8000);\r\n}\r\nif(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) {\r\nSet_PWM(0, 8000);\r\nSet_PWM(1, 0);\r\nfor(int n = 0; n < 3; n++) {\r\na1[n] = an[n];\r\n}\r\n}\r\n}"}
]